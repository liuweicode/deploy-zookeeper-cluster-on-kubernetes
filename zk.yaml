apiVersion: v1
kind: Service
metadata:
  name: uat-zk-hs
  namespace: uat-zookeeper
  labels:
    app: uat-zookeeper
spec:
  ports:
  - port: 2888
    name: server
  - port: 3888
    name: leader-election
  clusterIP: None
  selector:
    app: uat-zookeeper

---

apiVersion: v1
kind: Service
metadata:
  name: uat-zk-cs
  namespace: uat-zookeeper
  labels:
    app: uat-zookeeper
spec:
  ports:
  - port: 2181
    name: client
  selector:
    app: uat-zookeeper

---

apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: uat-zk-pdb
  namespace: uat-zookeeper
spec:
  selector:
    matchLabels:
      app: uat-zookeeper
  maxUnavailable: 1

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: uat-zookeeper
  name: uat-zookeeper
  namespace: uat-zookeeper
spec:
  podManagementPolicy: OrderedReady
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: uat-zookeeper
  serviceName: uat-zk-hs
  volumeClaimTemplates:
  - metadata:
      name: uat-zookeeper-data-pvc
    spec:
      accessModes: [ "ReadWriteMany" ]
      storageClassName: "uat-zookeeper"
      resources:
        requests:
          storage: 20Gi
  - metadata:
      name: uat-zookeeper-data-log-pvc
    spec:
      accessModes: [ "ReadWriteMany" ]
      storageClassName: "uat-zookeeper"
      resources:
        requests:
          storage: 20Gi
  template:
    metadata:
      labels:
        app: uat-zookeeper
    spec:
      containers:
      - image: toplist-registry-vpc.cn-shanghai.cr.aliyuncs.com/88/tp-zookeeper:3.7.1
        imagePullPolicy: IfNotPresent
        name: uat-zookeeper
        ports:
        - containerPort: 2181
          name: client
          protocol: TCP
        - containerPort: 2888
          name: server
          protocol: TCP
        - containerPort: 3888
          name: leader-election
          protocol: TCP
        - containerPort: 8080
          name: admin-server
          protocol: TCP
        lifecycle:
          postStart:
            exec:
              command:
              - "sh"
              - "-c"
              - >
                echo $(( $(cat /etc/hosts | grep zookeeper | awk '{print($3)}' | awk '{split($0,array,"-")} END{print array[3]}') + 1 )) > /data/myid
        resources:
          requests:
            cpu: 100m
            memory: 512Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - name: tz
          mountPath: /etc/localtime
          subPath: Shanghai
        - name: uat-zookeeper-data-pvc
          mountPath: /data
        - name: uat-zookeeper-data-log-pvc
          mountPath: /datalog
        - name: uat-zookeeper-config
          mountPath: /conf/zoo.cfg
          subPath: zoo.cfg
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: tz
        configMap:
          name: tz
      - name: uat-zookeeper-config
        configMap:
          name: uat-zookeeper-config
          items:
          - key: zoo.cfg
            path: zoo.cfg
